{"version":3,"file":"static/webpack/static/development/pages/index.js.6acfae73986317273a4f.hot-update.js","sources":["webpack:///./utils/animated-gradient.js"],"sourcesContent":["if (typeof document !== 'undefined'){\n    // target to give background to\n    var div = document.getElementById(\"main-container\");\n\n    /**\n     * blueish white - light pink\n     * light pink - dark purple\n     * dark purple - blueish white\n     */\n    var gradients = [\n        { start: [245,252,255], stop: [181,164,200] },\n        { start: [179,93,147], stop: [84,85,84] },\n        { start: [84,85,84], stop: [227,140,182] }\n    ];\n\n    // how long for each transition\n    var transition_time = 3;\n\n    // internal type vars\n    var currentIndex = 0; // where we are in the gradients array\n    var nextIndex = 1; // what index of the gradients array is next\n    var steps_count = 0; // steps counter\n    var steps_total = Math.round(transition_time*60); // total amount of steps\n    var rgb_steps = {\n    start: [0,0,0],\n    stop: [0,0,0]\n    }; // how much to alter each rgb value\n    var rgb_values = {\n    start: [0,0,0],\n    stop: [0,0,0]\n    }; // the current rgb values, gets altered by rgb steps on each interval\n    var prefixes = [\"-webkit-\",\"-moz-\",\"-o-\",\"-ms-\",\"\"]; // for looping through adding styles\n    var div_style = div.style; // short cut to actually adding styles\n    var color1, color2;\n\n    // sets next current and next index of gradients array\n    function set_next(num) {\n    return (num + 1 < gradients.length) ? num + 1 : 0;\n    }\n\n    // work out how big each rgb step is\n    function calc_step_size(a,b) {\n    return (a - b) / steps_total;\n    }\n\n    // populate the rgb_values and rgb_steps objects\n    function calc_steps() {\n    for (var key in rgb_values) {\n        if (rgb_values.hasOwnProperty(key)) {\n        for(var i = 0; i < gradients.length; i++) {\n            rgb_values[key][i] = gradients[currentIndex][key][i];\n            rgb_steps[key][i] = calc_step_size(gradients[nextIndex][key][i],rgb_values[key][i]);\n        }\n        }\n    }\n    }\n\n    // update current rgb vals, update DOM element with new CSS background\n    function updateGradient(){\n    // update the current rgb vals\n    for (var key in rgb_values) {\n        if (rgb_values.hasOwnProperty(key)) {\n        for(var i = 0; i < 3; i++) {\n            rgb_values[key][i] += rgb_steps[key][i];\n        }\n        }\n    }\n\n    // generate CSS rgb values\n    var t_color1 = \"rgb(\"+(rgb_values.start[0] | 0)+\",\"+(rgb_values.start[1] | 0)+\",\"+(rgb_values.start[2] | 0)+\")\";\n    var t_color2 = \"rgb(\"+(rgb_values.stop[0] | 0)+\",\"+(rgb_values.stop[1] | 0)+\",\"+(rgb_values.stop[2] | 0)+\")\";\n\n    // has anything changed on this interation\n    if (t_color1 != color1 || t_color2 != color2) {\n\n        // update cols strings\n        color1 = t_color1;\n        color2 = t_color2;\n\n        // update DOM element style attribute\n        div_style.backgroundImage = \"-webkit-gradient(linear, left bottom, right top, from(\"+color1+\"), to(\"+color2+\"))\";\n        for (var i = 0; i < 4; i++) {\n        div_style.backgroundImage = prefixes[i]+\"linear-gradient(45deg, \"+color1+\", \"+color2+\")\";\n        }\n    }\n\n    // we did another step\n    steps_count++;\n    // did we do too many steps?\n    if (steps_count > steps_total) {\n        // reset steps count\n        steps_count = 0;\n        // set new indexs\n        currentIndex = set_next(currentIndex);\n        nextIndex = set_next(nextIndex);\n        // calc steps\n        calc_steps();\n    }\n\n    if (div_style.backgroundImage.indexOf(\"gradient\") != -1) {\n        window.requestAnimationFrame(updateGradient)\n    }\n    }\n\n    // initial step calc\n    calc_steps();\n\n    // go go go!\n    window.requestAnimationFrame(updateGradient);\n}"],"mappings":";;;;;;;;;AAAA;AAmCA;AAnCA;AAqCA;AACA;AACA;AACA;AAxCA;AA0CA;AACA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvGA;AACA;AAEA;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAwEA;AACA;AAEA;AACA;;;;A","sourceRoot":""}